{
  "version": 3,
  "sources": ["../../../../../node_modules/ngx-intl-tel-input-gg/fesm2020/ngx-intl-tel-input-gg.mjs"],
  "sourcesContent": ["import * as lpn from 'google-libphonenumber';\nimport * as i0 from '@angular/core';\nimport { Injectable, Directive, EventEmitter, forwardRef, Component, Input, Output, ViewChild, NgModule } from '@angular/core';\nimport * as i4 from '@angular/forms';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { setTheme } from 'ngx-bootstrap/utils';\nimport * as i2 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i3 from 'ngx-bootstrap/dropdown';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nconst _c0 = [\"countryList\"];\nfunction NgxIntlTelInputComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\"+\", ctx_r0.selectedCountry.dialCode, \"\");\n  }\n}\nfunction NgxIntlTelInputComponent_div_6_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 17)(1, \"input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function NgxIntlTelInputComponent_div_6_div_1_Template_input_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r8.countrySearchText = $event);\n    })(\"keyup\", function NgxIntlTelInputComponent_div_6_div_1_Template_input_keyup_1_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r10 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r10.searchCountry());\n    })(\"click\", function NgxIntlTelInputComponent_div_6_div_1_Template_input_click_1_listener($event) {\n      return $event.stopPropagation();\n    });\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngModel\", ctx_r3.countrySearchText)(\"placeholder\", ctx_r3.searchCountryPlaceholder);\n  }\n}\nfunction NgxIntlTelInputComponent_div_6_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 19);\n    i0.ɵɵlistener(\"click\", function NgxIntlTelInputComponent_div_6_li_4_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const country_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      const _r2 = i0.ɵɵreference(8);\n      return i0.ɵɵresetView(ctx_r13.onCountrySelect(country_r12, _r2));\n    });\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵelement(2, \"div\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 22);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const country_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"id\", country_r12.htmlId + \"-preferred\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", country_r12.flagClass);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r12.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"+\", country_r12.dialCode, \"\");\n  }\n}\nfunction NgxIntlTelInputComponent_div_6_li_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"li\", 23);\n  }\n}\nfunction NgxIntlTelInputComponent_div_6_li_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"li\", 24);\n    i0.ɵɵlistener(\"click\", function NgxIntlTelInputComponent_div_6_li_6_Template_li_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r17);\n      const country_r15 = restoredCtx.$implicit;\n      const ctx_r16 = i0.ɵɵnextContext(2);\n      const _r2 = i0.ɵɵreference(8);\n      return i0.ɵɵresetView(ctx_r16.onCountrySelect(country_r15, _r2));\n    });\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵelement(2, \"div\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 21);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 22);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const country_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"id\", country_r15.htmlId);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngClass\", country_r15.flagClass);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(country_r15.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"+\", country_r15.dialCode, \"\");\n  }\n}\nfunction NgxIntlTelInputComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵtemplate(1, NgxIntlTelInputComponent_div_6_div_1_Template, 2, 2, \"div\", 11);\n    i0.ɵɵelementStart(2, \"ul\", 12, 13);\n    i0.ɵɵtemplate(4, NgxIntlTelInputComponent_div_6_li_4_Template, 7, 4, \"li\", 14)(5, NgxIntlTelInputComponent_div_6_li_5_Template, 1, 0, \"li\", 15)(6, NgxIntlTelInputComponent_div_6_li_6_Template, 7, 4, \"li\", 16);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.searchCountryFlag && ctx_r1.searchCountryField);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.preferredCountriesInDropDown);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.preferredCountriesInDropDown == null ? null : ctx_r1.preferredCountriesInDropDown.length);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.allCountries);\n  }\n}\nconst _c1 = a0 => ({\n  \"disabled\": a0\n});\nvar CountryISO;\n(function (CountryISO) {\n  CountryISO[\"Afghanistan\"] = \"af\";\n  CountryISO[\"Albania\"] = \"al\";\n  CountryISO[\"Algeria\"] = \"dz\";\n  CountryISO[\"AmericanSamoa\"] = \"as\";\n  CountryISO[\"Andorra\"] = \"ad\";\n  CountryISO[\"Angola\"] = \"ao\";\n  CountryISO[\"Anguilla\"] = \"ai\";\n  CountryISO[\"AntiguaAndBarbuda\"] = \"ag\";\n  CountryISO[\"Argentina\"] = \"ar\";\n  CountryISO[\"Armenia\"] = \"am\";\n  CountryISO[\"Aruba\"] = \"aw\";\n  CountryISO[\"Australia\"] = \"au\";\n  CountryISO[\"Austria\"] = \"at\";\n  CountryISO[\"Azerbaijan\"] = \"az\";\n  CountryISO[\"Bahamas\"] = \"bs\";\n  CountryISO[\"Bahrain\"] = \"bh\";\n  CountryISO[\"Bangladesh\"] = \"bd\";\n  CountryISO[\"Barbados\"] = \"bb\";\n  CountryISO[\"Belarus\"] = \"by\";\n  CountryISO[\"Belgium\"] = \"be\";\n  CountryISO[\"Belize\"] = \"bz\";\n  CountryISO[\"Benin\"] = \"bj\";\n  CountryISO[\"Bermuda\"] = \"bm\";\n  CountryISO[\"Bhutan\"] = \"bt\";\n  CountryISO[\"Bolivia\"] = \"bo\";\n  CountryISO[\"BosniaAndHerzegovina\"] = \"ba\";\n  CountryISO[\"Botswana\"] = \"bw\";\n  CountryISO[\"Brazil\"] = \"br\";\n  CountryISO[\"BritishIndianOceanTerritory\"] = \"io\";\n  CountryISO[\"BritishVirginIslands\"] = \"vg\";\n  CountryISO[\"Brunei\"] = \"bn\";\n  CountryISO[\"Bulgaria\"] = \"bg\";\n  CountryISO[\"BurkinaFaso\"] = \"bf\";\n  CountryISO[\"Burundi\"] = \"bi\";\n  CountryISO[\"Cambodia\"] = \"kh\";\n  CountryISO[\"Cameroon\"] = \"cm\";\n  CountryISO[\"Canada\"] = \"ca\";\n  CountryISO[\"CapeVerde\"] = \"cv\";\n  CountryISO[\"CaribbeanNetherlands\"] = \"bq\";\n  CountryISO[\"CaymanIslands\"] = \"ky\";\n  CountryISO[\"CentralAfricanRepublic\"] = \"cf\";\n  CountryISO[\"Chad\"] = \"td\";\n  CountryISO[\"Chile\"] = \"cl\";\n  CountryISO[\"China\"] = \"cn\";\n  CountryISO[\"ChristmasIsland\"] = \"cx\";\n  CountryISO[\"Cocos\"] = \"cc\";\n  CountryISO[\"Colombia\"] = \"co\";\n  CountryISO[\"Comoros\"] = \"km\";\n  CountryISO[\"CongoDRCJamhuriYaKidemokrasiaYaKongo\"] = \"cd\";\n  CountryISO[\"CongoRepublicCongoBrazzaville\"] = \"cg\";\n  CountryISO[\"CookIslands\"] = \"ck\";\n  CountryISO[\"CostaRica\"] = \"cr\";\n  CountryISO[\"C\\u00F4teDIvoire\"] = \"ci\";\n  CountryISO[\"Croatia\"] = \"hr\";\n  CountryISO[\"Cuba\"] = \"cu\";\n  CountryISO[\"Cura\\u00E7ao\"] = \"cw\";\n  CountryISO[\"Cyprus\"] = \"cy\";\n  CountryISO[\"CzechRepublic\"] = \"cz\";\n  CountryISO[\"Denmark\"] = \"dk\";\n  CountryISO[\"Djibouti\"] = \"dj\";\n  CountryISO[\"Dominica\"] = \"dm\";\n  CountryISO[\"DominicanRepublic\"] = \"do\";\n  CountryISO[\"Ecuador\"] = \"ec\";\n  CountryISO[\"Egypt\"] = \"eg\";\n  CountryISO[\"ElSalvador\"] = \"sv\";\n  CountryISO[\"EquatorialGuinea\"] = \"gq\";\n  CountryISO[\"Eritrea\"] = \"er\";\n  CountryISO[\"Estonia\"] = \"ee\";\n  CountryISO[\"Ethiopia\"] = \"et\";\n  CountryISO[\"FalklandIslands\"] = \"fk\";\n  CountryISO[\"FaroeIslands\"] = \"fo\";\n  CountryISO[\"Fiji\"] = \"fj\";\n  CountryISO[\"Finland\"] = \"fi\";\n  CountryISO[\"France\"] = \"fr\";\n  CountryISO[\"FrenchGuiana\"] = \"gf\";\n  CountryISO[\"FrenchPolynesia\"] = \"pf\";\n  CountryISO[\"Gabon\"] = \"ga\";\n  CountryISO[\"Gambia\"] = \"gm\";\n  CountryISO[\"Georgia\"] = \"ge\";\n  CountryISO[\"Germany\"] = \"de\";\n  CountryISO[\"Ghana\"] = \"gh\";\n  CountryISO[\"Gibraltar\"] = \"gi\";\n  CountryISO[\"Greece\"] = \"gr\";\n  CountryISO[\"Greenland\"] = \"gl\";\n  CountryISO[\"Grenada\"] = \"gd\";\n  CountryISO[\"Guadeloupe\"] = \"gp\";\n  CountryISO[\"Guam\"] = \"gu\";\n  CountryISO[\"Guatemala\"] = \"gt\";\n  CountryISO[\"Guernsey\"] = \"gg\";\n  CountryISO[\"Guinea\"] = \"gn\";\n  CountryISO[\"GuineaBissau\"] = \"gw\";\n  CountryISO[\"Guyana\"] = \"gy\";\n  CountryISO[\"Haiti\"] = \"ht\";\n  CountryISO[\"Honduras\"] = \"hn\";\n  CountryISO[\"HongKong\"] = \"hk\";\n  CountryISO[\"Hungary\"] = \"hu\";\n  CountryISO[\"Iceland\"] = \"is\";\n  CountryISO[\"India\"] = \"in\";\n  CountryISO[\"Indonesia\"] = \"id\";\n  CountryISO[\"Iran\"] = \"ir\";\n  CountryISO[\"Iraq\"] = \"iq\";\n  CountryISO[\"Ireland\"] = \"ie\";\n  CountryISO[\"IsleOfMan\"] = \"im\";\n  CountryISO[\"Israel\"] = \"il\";\n  CountryISO[\"Italy\"] = \"it\";\n  CountryISO[\"Jamaica\"] = \"jm\";\n  CountryISO[\"Japan\"] = \"jp\";\n  CountryISO[\"Jersey\"] = \"je\";\n  CountryISO[\"Jordan\"] = \"jo\";\n  CountryISO[\"Kazakhstan\"] = \"kz\";\n  CountryISO[\"Kenya\"] = \"ke\";\n  CountryISO[\"Kiribati\"] = \"ki\";\n  CountryISO[\"Kosovo\"] = \"xk\";\n  CountryISO[\"Kuwait\"] = \"kw\";\n  CountryISO[\"Kyrgyzstan\"] = \"kg\";\n  CountryISO[\"Laos\"] = \"la\";\n  CountryISO[\"Latvia\"] = \"lv\";\n  CountryISO[\"Lebanon\"] = \"lb\";\n  CountryISO[\"Lesotho\"] = \"ls\";\n  CountryISO[\"Liberia\"] = \"lr\";\n  CountryISO[\"Libya\"] = \"ly\";\n  CountryISO[\"Liechtenstein\"] = \"li\";\n  CountryISO[\"Lithuania\"] = \"lt\";\n  CountryISO[\"Luxembourg\"] = \"lu\";\n  CountryISO[\"Macau\"] = \"mo\";\n  CountryISO[\"Macedonia\"] = \"mk\";\n  CountryISO[\"Madagascar\"] = \"mg\";\n  CountryISO[\"Malawi\"] = \"mw\";\n  CountryISO[\"Malaysia\"] = \"my\";\n  CountryISO[\"Maldives\"] = \"mv\";\n  CountryISO[\"Mali\"] = \"ml\";\n  CountryISO[\"Malta\"] = \"mt\";\n  CountryISO[\"MarshallIslands\"] = \"mh\";\n  CountryISO[\"Martinique\"] = \"mq\";\n  CountryISO[\"Mauritania\"] = \"mr\";\n  CountryISO[\"Mauritius\"] = \"mu\";\n  CountryISO[\"Mayotte\"] = \"yt\";\n  CountryISO[\"Mexico\"] = \"mx\";\n  CountryISO[\"Micronesia\"] = \"fm\";\n  CountryISO[\"Moldova\"] = \"md\";\n  CountryISO[\"Monaco\"] = \"mc\";\n  CountryISO[\"Mongolia\"] = \"mn\";\n  CountryISO[\"Montenegro\"] = \"me\";\n  CountryISO[\"Montserrat\"] = \"ms\";\n  CountryISO[\"Morocco\"] = \"ma\";\n  CountryISO[\"Mozambique\"] = \"mz\";\n  CountryISO[\"Myanmar\"] = \"mm\";\n  CountryISO[\"Namibia\"] = \"na\";\n  CountryISO[\"Nauru\"] = \"nr\";\n  CountryISO[\"Nepal\"] = \"np\";\n  CountryISO[\"Netherlands\"] = \"nl\";\n  CountryISO[\"NewCaledonia\"] = \"nc\";\n  CountryISO[\"NewZealand\"] = \"nz\";\n  CountryISO[\"Nicaragua\"] = \"ni\";\n  CountryISO[\"Niger\"] = \"ne\";\n  CountryISO[\"Nigeria\"] = \"ng\";\n  CountryISO[\"Niue\"] = \"nu\";\n  CountryISO[\"NorfolkIsland\"] = \"nf\";\n  CountryISO[\"NorthKorea\"] = \"kp\";\n  CountryISO[\"NorthernMarianaIslands\"] = \"mp\";\n  CountryISO[\"Norway\"] = \"no\";\n  CountryISO[\"Oman\"] = \"om\";\n  CountryISO[\"Pakistan\"] = \"pk\";\n  CountryISO[\"Palau\"] = \"pw\";\n  CountryISO[\"Palestine\"] = \"ps\";\n  CountryISO[\"Panama\"] = \"pa\";\n  CountryISO[\"PapuaNewGuinea\"] = \"pg\";\n  CountryISO[\"Paraguay\"] = \"py\";\n  CountryISO[\"Peru\"] = \"pe\";\n  CountryISO[\"Philippines\"] = \"ph\";\n  CountryISO[\"Poland\"] = \"pl\";\n  CountryISO[\"Portugal\"] = \"pt\";\n  CountryISO[\"PuertoRico\"] = \"pr\";\n  CountryISO[\"Qatar\"] = \"qa\";\n  CountryISO[\"R\\u00E9union\"] = \"re\";\n  CountryISO[\"Romania\"] = \"ro\";\n  CountryISO[\"Russia\"] = \"ru\";\n  CountryISO[\"Rwanda\"] = \"rw\";\n  CountryISO[\"SaintBarth\\u00E9lemy\"] = \"bl\";\n  CountryISO[\"SaintHelena\"] = \"sh\";\n  CountryISO[\"SaintKittsAndNevis\"] = \"kn\";\n  CountryISO[\"SaintLucia\"] = \"lc\";\n  CountryISO[\"SaintMartin\"] = \"mf\";\n  CountryISO[\"SaintPierreAndMiquelon\"] = \"pm\";\n  CountryISO[\"SaintVincentAndTheGrenadines\"] = \"vc\";\n  CountryISO[\"Samoa\"] = \"ws\";\n  CountryISO[\"SanMarino\"] = \"sm\";\n  CountryISO[\"S\\u00E3oTom\\u00E9AndPr\\u00EDncipe\"] = \"st\";\n  CountryISO[\"SaudiArabia\"] = \"sa\";\n  CountryISO[\"Senegal\"] = \"sn\";\n  CountryISO[\"Serbia\"] = \"rs\";\n  CountryISO[\"Seychelles\"] = \"sc\";\n  CountryISO[\"SierraLeone\"] = \"sl\";\n  CountryISO[\"Singapore\"] = \"sg\";\n  CountryISO[\"SintMaarten\"] = \"sx\";\n  CountryISO[\"Slovakia\"] = \"sk\";\n  CountryISO[\"Slovenia\"] = \"si\";\n  CountryISO[\"SolomonIslands\"] = \"sb\";\n  CountryISO[\"Somalia\"] = \"so\";\n  CountryISO[\"SouthAfrica\"] = \"za\";\n  CountryISO[\"SouthKorea\"] = \"kr\";\n  CountryISO[\"SouthSudan\"] = \"ss\";\n  CountryISO[\"Spain\"] = \"es\";\n  CountryISO[\"SriLanka\"] = \"lk\";\n  CountryISO[\"Sudan\"] = \"sd\";\n  CountryISO[\"Suriname\"] = \"sr\";\n  CountryISO[\"SvalbardAndJanMayen\"] = \"sj\";\n  CountryISO[\"Swaziland\"] = \"sz\";\n  CountryISO[\"Sweden\"] = \"se\";\n  CountryISO[\"Switzerland\"] = \"ch\";\n  CountryISO[\"Syria\"] = \"sy\";\n  CountryISO[\"Taiwan\"] = \"tw\";\n  CountryISO[\"Tajikistan\"] = \"tj\";\n  CountryISO[\"Tanzania\"] = \"tz\";\n  CountryISO[\"Thailand\"] = \"th\";\n  CountryISO[\"TimorLeste\"] = \"tl\";\n  CountryISO[\"Togo\"] = \"tg\";\n  CountryISO[\"Tokelau\"] = \"tk\";\n  CountryISO[\"Tonga\"] = \"to\";\n  CountryISO[\"TrinidadAndTobago\"] = \"tt\";\n  CountryISO[\"Tunisia\"] = \"tn\";\n  CountryISO[\"Turkey\"] = \"tr\";\n  CountryISO[\"Turkmenistan\"] = \"tm\";\n  CountryISO[\"TurksAndCaicosIslands\"] = \"tc\";\n  CountryISO[\"Tuvalu\"] = \"tv\";\n  CountryISO[\"USVirginIslands\"] = \"vi\";\n  CountryISO[\"Uganda\"] = \"ug\";\n  CountryISO[\"Ukraine\"] = \"ua\";\n  CountryISO[\"UnitedArabEmirates\"] = \"ae\";\n  CountryISO[\"UnitedKingdom\"] = \"gb\";\n  CountryISO[\"UnitedStates\"] = \"us\";\n  CountryISO[\"Uruguay\"] = \"uy\";\n  CountryISO[\"Uzbekistan\"] = \"uz\";\n  CountryISO[\"Vanuatu\"] = \"vu\";\n  CountryISO[\"VaticanCity\"] = \"va\";\n  CountryISO[\"Venezuela\"] = \"ve\";\n  CountryISO[\"Vietnam\"] = \"vn\";\n  CountryISO[\"WallisAndFutuna\"] = \"wf\";\n  CountryISO[\"WesternSahara\"] = \"eh\";\n  CountryISO[\"Yemen\"] = \"ye\";\n  CountryISO[\"Zambia\"] = \"zm\";\n  CountryISO[\"Zimbabwe\"] = \"zw\";\n  CountryISO[\"\\u00C5landIslands\"] = \"ax\";\n})(CountryISO || (CountryISO = {}));\nclass CountryCode {\n  constructor() {\n    this.allCountries = [['Afghanistan (‫افغانستان‬‎)', CountryISO.Afghanistan, '93'], ['Albania (Shqipëri)', CountryISO.Albania, '355'], ['Algeria (‫الجزائر‬‎)', CountryISO.Algeria, '213'], ['American Samoa', 'as', '1', 1, ['684']], ['Andorra', CountryISO.Andorra, '376'], ['Angola', CountryISO.Angola, '244'], ['Anguilla', 'ai', '1', 1, ['264']], ['Antigua and Barbuda', 'ag', '1', 1, ['268']], ['Argentina', CountryISO.Argentina, '54'], ['Armenia (Հայաստան)', CountryISO.Armenia, '374'], ['Aruba', CountryISO.Aruba, '297'], ['Australia', CountryISO.Australia, '61', 0], ['Austria (Österreich)', CountryISO.Austria, '43'], ['Azerbaijan (Azərbaycan)', CountryISO.Azerbaijan, '994'], ['Bahamas', 'bs', '1', 1, ['242']], ['Bahrain (‫البحرين‬‎)', CountryISO.Bahrain, '973'], ['Bangladesh (বাংলাদেশ)', CountryISO.Bangladesh, '880'], ['Barbados', 'bb', '1', 1, ['246']], ['Belarus (Беларусь)', CountryISO.Belarus, '375'], ['Belgium (België)', CountryISO.Belgium, '32'], ['Belize', CountryISO.Belize, '501'], ['Benin (Bénin)', CountryISO.Benin, '229'], ['Bermuda', 'bm', '1', 1, ['441']], ['Bhutan (འབྲུག)', CountryISO.Bhutan, '975'], ['Bolivia', CountryISO.Bolivia, '591'], ['Bosnia and Herzegovina (Босна и Херцеговина)', CountryISO.BosniaAndHerzegovina, '387'], ['Botswana', CountryISO.Botswana, '267'], ['Brazil (Brasil)', CountryISO.Brazil, '55'], ['British Indian Ocean Territory', CountryISO.BritishIndianOceanTerritory, '246'], ['British Virgin Islands', 'vg', '1', 1, ['284']], ['Brunei', CountryISO.Brunei, '673'], ['Bulgaria (България)', CountryISO.Bulgaria, '359'], ['Burkina Faso', CountryISO.BurkinaFaso, '226'], ['Burundi (Uburundi)', CountryISO.Burundi, '257'], ['Cambodia (កម្ពុជា)', CountryISO.Cambodia, '855'], ['Cameroon (Cameroun)', CountryISO.Cameroon, '237'], ['Canada', CountryISO.Canada, '1', 1, ['204', '226', '236', '249', '250', '289', '306', '343', '365', '387', '403', '416', '418', '431', '437', '438', '450', '506', '514', '519', '548', '579', '581', '587', '604', '613', '639', '647', '672', '705', '709', '742', '778', '780', '782', '807', '819', '825', '867', '873', '902', '905']], ['Cape Verde (Kabu Verdi)', CountryISO.CapeVerde, '238'], ['Caribbean Netherlands', CountryISO.CaribbeanNetherlands, '599', 1], ['Cayman Islands', 'ky', '1', 1, ['345']], ['Central African Republic (République centrafricaine)', CountryISO.CentralAfricanRepublic, '236'], ['Chad (Tchad)', CountryISO.Chad, '235'], ['Chile', CountryISO.Chile, '56'], ['China (中国)', CountryISO.China, '86'], ['Christmas Island', CountryISO.ChristmasIsland, '61', 2], ['Cocos (Keeling) Islands', CountryISO.Cocos, '61', 1], ['Colombia', CountryISO.Colombia, '57'], ['Comoros (‫جزر القمر‬‎)', CountryISO.Comoros, '269'], ['Congo (DRC) (Jamhuri ya Kidemokrasia ya Kongo)', CountryISO.CongoDRCJamhuriYaKidemokrasiaYaKongo, '243'], ['Congo (Republic) (Congo-Brazzaville)', CountryISO.CongoRepublicCongoBrazzaville, '242'], ['Cook Islands', CountryISO.CookIslands, '682'], ['Costa Rica', CountryISO.CostaRica, '506'], ['Côte d’Ivoire', CountryISO.CôteDIvoire, '225'], ['Croatia (Hrvatska)', CountryISO.Croatia, '385'], ['Cuba', CountryISO.Cuba, '53'], ['Curaçao', CountryISO.Curaçao, '599', 0], ['Cyprus (Κύπρος)', CountryISO.Cyprus, '357'], ['Czech Republic (Česká republika)', CountryISO.CzechRepublic, '420'], ['Denmark (Danmark)', CountryISO.Denmark, '45'], ['Djibouti', CountryISO.Djibouti, '253'], ['Dominica', CountryISO.Dominica, '1767'], ['Dominican Republic (República Dominicana)', CountryISO.DominicanRepublic, '1', 2, ['809', '829', '849']], ['Ecuador', CountryISO.Ecuador, '593'], ['Egypt (‫مصر‬‎)', CountryISO.Egypt, '20'], ['El Salvador', CountryISO.ElSalvador, '503'], ['Equatorial Guinea (Guinea Ecuatorial)', CountryISO.EquatorialGuinea, '240'], ['Eritrea', CountryISO.Eritrea, '291'], ['Estonia (Eesti)', CountryISO.Estonia, '372'], ['Ethiopia', CountryISO.Ethiopia, '251'], ['Falkland Islands (Islas Malvinas)', CountryISO.FalklandIslands, '500'], ['Faroe Islands (Føroyar)', CountryISO.FaroeIslands, '298'], ['Fiji', CountryISO.Fiji, '679'], ['Finland (Suomi)', CountryISO.Finland, '358', 0], ['France', CountryISO.France, '33'], ['French Guiana (Guyane française)', CountryISO.FrenchGuiana, '594'], ['French Polynesia (Polynésie française)', CountryISO.FrenchPolynesia, '689'], ['Gabon', CountryISO.Gabon, '241'], ['Gambia', CountryISO.Gambia, '220'], ['Georgia (საქართველო)', CountryISO.Georgia, '995'], ['Germany (Deutschland)', CountryISO.Germany, '49'], ['Ghana (Gaana)', CountryISO.Ghana, '233'], ['Gibraltar', CountryISO.Gibraltar, '350'], ['Greece (Ελλάδα)', CountryISO.Greece, '30'], ['Greenland (Kalaallit Nunaat)', CountryISO.Greenland, '299'], ['Grenada', CountryISO.Grenada, '1473'], ['Guadeloupe', CountryISO.Guadeloupe, '590', 0], ['Guam', 'gu', '1', 1, ['671']], ['Guatemala', CountryISO.Guatemala, '502'], ['Guernsey', CountryISO.Guernsey, '44', 1, [1481]], ['Guinea (Guinée)', CountryISO.Guinea, '224'], ['Guinea-Bissau (Guiné Bissau)', CountryISO.GuineaBissau, '245'], ['Guyana', CountryISO.Guyana, '592'], ['Haiti', CountryISO.Haiti, '509'], ['Honduras', CountryISO.Honduras, '504'], ['Hong Kong (香港)', CountryISO.HongKong, '852'], ['Hungary (Magyarország)', CountryISO.Hungary, '36'], ['Iceland (Ísland)', CountryISO.Iceland, '354'], ['India (भारत)', CountryISO.India, '91'], ['Indonesia', CountryISO.Indonesia, '62'], ['Iran (‫ایران‬‎)', CountryISO.Iran, '98'], ['Iraq (‫العراق‬‎)', CountryISO.Iraq, '964'], ['Ireland', CountryISO.Ireland, '353'], ['Isle of Man', CountryISO.IsleOfMan, '44', 2, [1624]], ['Israel (‫ישראל‬‎)', CountryISO.Israel, '972'], ['Italy (Italia)', CountryISO.Italy, '39', 0], ['Jamaica', 'jm', '1', 1, ['876']], ['Japan (日本)', CountryISO.Japan, '81'], ['Jersey', CountryISO.Jersey, '44', 3, [1534]], ['Jordan (‫الأردن‬‎)', CountryISO.Jordan, '962'], ['Kazakhstan (Казахстан)', CountryISO.Kazakhstan, '7', 1], ['Kenya', CountryISO.Kenya, '254'], ['Kiribati', CountryISO.Kiribati, '686'], ['Kosovo', CountryISO.Kosovo, '383'], ['Kuwait (‫الكويت‬‎)', CountryISO.Kuwait, '965'], ['Kyrgyzstan (Кыргызстан)', CountryISO.Kyrgyzstan, '996'], ['Laos (ລາວ)', CountryISO.Laos, '856'], ['Latvia (Latvija)', CountryISO.Latvia, '371'], ['Lebanon (‫لبنان‬‎)', CountryISO.Lebanon, '961'], ['Lesotho', CountryISO.Lesotho, '266'], ['Liberia', CountryISO.Liberia, '231'], ['Libya (‫ليبيا‬‎)', CountryISO.Libya, '218'], ['Liechtenstein', CountryISO.Liechtenstein, '423'], ['Lithuania (Lietuva)', CountryISO.Lithuania, '370'], ['Luxembourg', CountryISO.Luxembourg, '352'], ['Macau (澳門)', CountryISO.Macau, '853'], ['Macedonia (FYROM) (Македонија)', CountryISO.Macedonia, '389'], ['Madagascar (Madagasikara)', CountryISO.Madagascar, '261'], ['Malawi', CountryISO.Malawi, '265'], ['Malaysia', CountryISO.Malaysia, '60'], ['Maldives', CountryISO.Maldives, '960'], ['Mali', CountryISO.Mali, '223'], ['Malta', CountryISO.Malta, '356'], ['Marshall Islands', CountryISO.MarshallIslands, '692'], ['Martinique', CountryISO.Martinique, '596'], ['Mauritania (‫موريتانيا‬‎)', CountryISO.Mauritania, '222'], ['Mauritius (Moris)', CountryISO.Mauritius, '230'], ['Mayotte', CountryISO.Mayotte, '262', 1], ['Mexico (México)', CountryISO.Mexico, '52'], ['Micronesia', CountryISO.Micronesia, '691'], ['Moldova (Republica Moldova)', CountryISO.Moldova, '373'], ['Monaco', CountryISO.Monaco, '377'], ['Mongolia (Монгол)', CountryISO.Mongolia, '976'], ['Montenegro (Crna Gora)', CountryISO.Montenegro, '382'], ['Montserrat', 'ms', '1', 1, ['664']], ['Morocco (‫المغرب‬‎)', CountryISO.Morocco, '212', 0], ['Mozambique (Moçambique)', CountryISO.Mozambique, '258'], ['Myanmar (Burma) (မြန်မာ)', CountryISO.Myanmar, '95'], ['Namibia (Namibië)', CountryISO.Namibia, '264'], ['Nauru', CountryISO.Nauru, '674'], ['Nepal (नेपाल)', CountryISO.Nepal, '977'], ['Netherlands (Nederland)', CountryISO.Netherlands, '31'], ['New Caledonia (Nouvelle-Calédonie)', CountryISO.NewCaledonia, '687'], ['New Zealand', CountryISO.NewZealand, '64'], ['Nicaragua', CountryISO.Nicaragua, '505'], ['Niger (Nijar)', CountryISO.Niger, '227'], ['Nigeria', CountryISO.Nigeria, '234'], ['Niue', CountryISO.Niue, '683'], ['Norfolk Island', CountryISO.NorfolkIsland, '672'], ['North Korea (조선 민주주의 인민 공화국)', CountryISO.NorthKorea, '850'], ['Northern Mariana Islands', CountryISO.NorthernMarianaIslands, '1670'], ['Norway (Norge)', CountryISO.Norway, '47', 0], ['Oman (‫عُمان‬‎)', CountryISO.Oman, '968'], ['Pakistan (‫پاکستان‬‎)', CountryISO.Pakistan, '92'], ['Palau', CountryISO.Palau, '680'], ['Palestine (‫فلسطين‬‎)', CountryISO.Palestine, '970'], ['Panama (Panamá)', CountryISO.Panama, '507'], ['Papua New Guinea', CountryISO.PapuaNewGuinea, '675'], ['Paraguay', CountryISO.Paraguay, '595'], ['Peru (Perú)', CountryISO.Peru, '51'], ['Philippines', CountryISO.Philippines, '63'], ['Poland (Polska)', CountryISO.Poland, '48'], ['Portugal', CountryISO.Portugal, '351'], ['Puerto Rico', CountryISO.PuertoRico, '1', 3, ['787', '939']], ['Qatar (‫قطر‬‎)', CountryISO.Qatar, '974'], ['Réunion (La Réunion)', CountryISO.Réunion, '262', 0], ['Romania (România)', CountryISO.Romania, '40'], ['Russia (Россия)', CountryISO.Russia, '7', 0], ['Rwanda', CountryISO.Rwanda, '250'], ['Saint Barthélemy (Saint-Barthélemy)', CountryISO.SaintBarthélemy, '590', 1], ['Saint Helena', CountryISO.SaintHelena, '290'], ['Saint Kitts and Nevis', CountryISO.SaintKittsAndNevis, '1869'], ['Saint Lucia', 'lc', '1', 1, ['758']], ['Saint Martin (Saint-Martin (partie française))', CountryISO.SaintMartin, '590', 2], ['Saint Pierre and Miquelon (Saint-Pierre-et-Miquelon)', CountryISO.SaintPierreAndMiquelon, '508'], ['Saint Vincent and the Grenadines', 'vc', '1', 1, ['784']], ['Samoa', CountryISO.Samoa, '685'], ['San Marino', CountryISO.SanMarino, '378'], ['São Tomé and Príncipe (São Tomé e Príncipe)', CountryISO.SãoToméAndPríncipe, '239'], ['Saudi Arabia (‫المملكة العربية السعودية‬‎)', CountryISO.SaudiArabia, '966'], ['Senegal (Sénégal)', CountryISO.Senegal, '221'], ['Serbia (Србија)', CountryISO.Serbia, '381'], ['Seychelles', CountryISO.Seychelles, '248'], ['Sierra Leone', CountryISO.SierraLeone, '232'], ['Singapore', CountryISO.Singapore, '65'], ['Sint Maarten', 'sx', '1', 1, ['721']], ['Slovakia (Slovensko)', CountryISO.Slovakia, '421'], ['Slovenia (Slovenija)', CountryISO.Slovenia, '386'], ['Solomon Islands', CountryISO.SolomonIslands, '677'], ['Somalia (Soomaaliya)', CountryISO.Somalia, '252'], ['South Africa', CountryISO.SouthAfrica, '27'], ['South Korea (대한민국)', CountryISO.SouthKorea, '82'], ['South Sudan (‫جنوب السودان‬‎)', CountryISO.SouthSudan, '211'], ['Spain (España)', CountryISO.Spain, '34'], ['Sri Lanka (ශ්‍රී ලංකාව)', CountryISO.SriLanka, '94'], ['Sudan (‫السودان‬‎)', CountryISO.Sudan, '249'], ['Suriname', CountryISO.Suriname, '597'], ['Svalbard and Jan Mayen', CountryISO.SvalbardAndJanMayen, '47', 1], ['Swaziland', CountryISO.Swaziland, '268'], ['Sweden (Sverige)', CountryISO.Sweden, '46'], ['Switzerland (Schweiz)', CountryISO.Switzerland, '41'], ['Syria (‫سوريا‬‎)', CountryISO.Syria, '963'], ['Taiwan (台灣)', CountryISO.Taiwan, '886'], ['Tajikistan', CountryISO.Tajikistan, '992'], ['Tanzania', CountryISO.Tanzania, '255'], ['Thailand (ไทย)', CountryISO.Thailand, '66'], ['Timor-Leste', CountryISO.TimorLeste, '670'], ['Togo', CountryISO.Togo, '228'], ['Tokelau', CountryISO.Tokelau, '690'], ['Tonga', CountryISO.Tonga, '676'], ['Trinidad and Tobago', 'tt', '1', 1, ['868']], ['Tunisia (‫تونس‬‎)', CountryISO.Tunisia, '216'], ['Turkey (Türkiye)', CountryISO.Turkey, '90'], ['Turkmenistan', CountryISO.Turkmenistan, '993'], ['Turks and Caicos Islands', CountryISO.TurksAndCaicosIslands, '1649'], ['Tuvalu', CountryISO.Tuvalu, '688'], ['U.S. Virgin Islands', 'vi', '1', 1, ['340']], ['Uganda', CountryISO.Uganda, '256'], ['Ukraine (Україна)', CountryISO.Ukraine, '380'], ['United Arab Emirates (‫الإمارات العربية المتحدة‬‎)', CountryISO.UnitedArabEmirates, '971'], ['United Kingdom', CountryISO.UnitedKingdom, '44', 0], ['United States', CountryISO.UnitedStates, '1', 0], ['Uruguay', CountryISO.Uruguay, '598'], ['Uzbekistan (Oʻzbekiston)', CountryISO.Uzbekistan, '998'], ['Vanuatu', CountryISO.Vanuatu, '678'], ['Vatican City (Città del Vaticano)', CountryISO.VaticanCity, '39', 1], ['Venezuela', CountryISO.Venezuela, '58'], ['Vietnam (Việt Nam)', CountryISO.Vietnam, '84'], ['Wallis and Futuna', CountryISO.WallisAndFutuna, '681'], ['Western Sahara (‫الصحراء الغربية‬‎)', CountryISO.WesternSahara, '212', 1], ['Yemen (‫اليمن‬‎)', CountryISO.Yemen, '967'], ['Zambia', CountryISO.Zambia, '260'], ['Zimbabwe', CountryISO.Zimbabwe, '263'], ['Åland Islands', CountryISO.ÅlandIslands, '358', 1]];\n  }\n}\nCountryCode.ɵfac = function CountryCode_Factory(t) {\n  return new (t || CountryCode)();\n};\nCountryCode.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: CountryCode,\n  factory: CountryCode.ɵfac\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(CountryCode, [{\n    type: Injectable\n  }], null, null);\n})();\nvar SearchCountryField;\n(function (SearchCountryField) {\n  SearchCountryField[\"DialCode\"] = \"dialCode\";\n  SearchCountryField[\"Iso2\"] = \"iso2\";\n  SearchCountryField[\"Name\"] = \"name\";\n  SearchCountryField[\"All\"] = \"all\";\n})(SearchCountryField || (SearchCountryField = {}));\n\n/*\r\nWe use \"control: any\" instead of \"control: FormControl\" to silence:\r\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\r\nThis happens because I've expanded control with nativeElement via\r\n'NativeElementInjectorDirective' to get an access to the element.\r\nMore about this approach and reasons for this:\r\nhttps://github.com/angular/angular/issues/18025\r\nhttps://stackoverflow.com/a/54075119/1617590\r\n*/\nconst phoneNumberValidator = control => {\n  if (!control.value) {\n    return;\n  }\n  // Find <input> inside injected nativeElement and get its \"id\".\n  const el = control.nativeElement;\n  const inputBox = el ? el.querySelector('input[type=\"tel\"]') : undefined;\n  if (inputBox) {\n    const id = inputBox.id;\n    const isCheckValidation = inputBox.getAttribute('validation');\n    if (isCheckValidation === 'true') {\n      const isRequired = control.errors && control.errors.required === true;\n      const error = {\n        validatePhoneNumber: {\n          valid: false\n        }\n      };\n      inputBox.setCustomValidity('Invalid field.');\n      let number;\n      try {\n        number = lpn.PhoneNumberUtil.getInstance().parse(control.value.number, control.value.countryCode);\n      } catch (e) {\n        if (isRequired) {\n          return error;\n        } else {\n          inputBox.setCustomValidity('');\n        }\n      }\n      if (control.value) {\n        // @ts-ignore\n        if (!number) {\n          return error;\n        } else {\n          if (!lpn.PhoneNumberUtil.getInstance().isValidNumberForRegion(number, control.value.countryCode)) {\n            return error;\n          } else {\n            inputBox.setCustomValidity('');\n          }\n        }\n      }\n    } else if (isCheckValidation === 'false') {\n      inputBox.setCustomValidity('');\n      control.clearValidators();\n    }\n  }\n  return;\n};\nvar PhoneNumberFormat;\n(function (PhoneNumberFormat) {\n  PhoneNumberFormat[\"International\"] = \"INTERNATIONAL\";\n  PhoneNumberFormat[\"National\"] = \"NATIONAL\";\n})(PhoneNumberFormat || (PhoneNumberFormat = {}));\n\n/*\r\n\"Property 'nativeElement' does not exist on type 'FormControl'\".\r\n'NativeElementInjectorDirective' injects nativeElement to each control,\r\nso we can access it from inside validator for example.\r\nMore about this approach and reasons for this:\r\nhttps://github.com/angular/angular/issues/18025\r\nhttps://stackoverflow.com/a/54075119/1617590\r\n*/\nclass NativeElementInjectorDirective {\n  constructor(controlDir, host) {\n    this.controlDir = controlDir;\n    this.host = host;\n  }\n  ngOnInit() {\n    if (this.controlDir.control) {\n      // @ts-ignore\n      this.controlDir.control['nativeElement'] = this.host.nativeElement;\n    }\n  }\n}\nNativeElementInjectorDirective.ɵfac = function NativeElementInjectorDirective_Factory(t) {\n  return new (t || NativeElementInjectorDirective)(i0.ɵɵdirectiveInject(i4.NgControl), i0.ɵɵdirectiveInject(i0.ElementRef));\n};\nNativeElementInjectorDirective.ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n  type: NativeElementInjectorDirective,\n  selectors: [[\"\", \"ngModel\", \"\"], [\"\", \"formControl\", \"\"], [\"\", \"formControlName\", \"\"]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NativeElementInjectorDirective, [{\n    type: Directive,\n    args: [{\n      // tslint:disable-next-line: directive-selector\n      selector: '[ngModel], [formControl], [formControlName]'\n    }]\n  }], function () {\n    return [{\n      type: i4.NgControl\n    }, {\n      type: i0.ElementRef\n    }];\n  }, null);\n})();\nclass NgxIntlTelInputComponent {\n  constructor(countryCodeData) {\n    this.countryCodeData = countryCodeData;\n    this.value = '';\n    this.preferredCountries = [];\n    this.enablePlaceholder = true;\n    this.numberFormat = PhoneNumberFormat.International;\n    this.cssClass = 'form-control';\n    this.onlyCountries = [];\n    this.enableAutoCountrySelect = true;\n    this.searchCountryFlag = false;\n    this.searchCountryField = [SearchCountryField.All];\n    this.searchCountryPlaceholder = 'Search Country';\n    this.selectFirstCountry = true;\n    this.phoneValidation = true;\n    this.inputId = 'phone';\n    this.separateDialCode = false;\n    this.countryChange = new EventEmitter();\n    this.selectedCountry = {\n      areaCodes: undefined,\n      dialCode: '',\n      htmlId: '',\n      flagClass: '',\n      iso2: '',\n      name: '',\n      placeHolder: '',\n      priority: 0\n    };\n    this.phoneNumber = '';\n    this.allCountries = [];\n    this.preferredCountriesInDropDown = [];\n    // Has to be 'any' to prevent a need to install @types/google-libphonenumber by the package user...\n    this.phoneUtil = lpn.PhoneNumberUtil.getInstance();\n    this.disabled = false;\n    this.errors = ['Phone number is required.'];\n    this.countrySearchText = '';\n    this.onTouched = () => {};\n    this.propagateChange = _ => {};\n    // If this is not set, ngx-bootstrap will try to use the bs3 CSS (which is not what we've embedded) and will\n    // Add the wrong classes and such\n    setTheme('bs4');\n  }\n  ngOnInit() {\n    this.init();\n  }\n  ngOnChanges(changes) {\n    const selectedISO = changes['selectedCountryISO'];\n    if (this.allCountries && selectedISO && selectedISO.currentValue !== selectedISO.previousValue) {\n      this.updateSelectedCountry();\n    }\n    if (changes['preferredCountries']) {\n      this.updatePreferredCountries();\n    }\n    this.checkSeparateDialCodeStyle();\n  }\n  /*\r\n        This is a wrapper method to avoid calling this.ngOnInit() in writeValue().\r\n        Ref: http://codelyzer.com/rules/no-life-cycle-call/\r\n    */\n  init() {\n    this.fetchCountryData();\n    if (this.preferredCountries.length) {\n      this.updatePreferredCountries();\n    }\n    if (this.onlyCountries.length) {\n      this.allCountries = this.allCountries.filter(c => this.onlyCountries.includes(c.iso2));\n    }\n    if (this.selectFirstCountry) {\n      if (this.preferredCountriesInDropDown.length) {\n        this.setSelectedCountry(this.preferredCountriesInDropDown[0]);\n      } else {\n        this.setSelectedCountry(this.allCountries[0]);\n      }\n    }\n    this.updateSelectedCountry();\n    this.checkSeparateDialCodeStyle();\n  }\n  setSelectedCountry(country) {\n    this.selectedCountry = country;\n    this.countryChange.emit(country);\n  }\n  /**\r\n   * Search country based on country name, iso2, dialCode or all of them.\r\n   */\n  searchCountry() {\n    if (!this.countrySearchText) {\n      this.countryList.nativeElement.querySelector('.iti__country-list li').scrollIntoView({\n        behavior: 'smooth',\n        block: 'nearest',\n        inline: 'nearest'\n      });\n      return;\n    }\n    const countrySearchTextLower = this.countrySearchText.toLowerCase();\n    // @ts-ignore\n    const country = this.allCountries.filter(c => {\n      if (this.searchCountryField.indexOf(SearchCountryField.All) > -1) {\n        // Search in all fields\n        if (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n          return c;\n        }\n        if (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n          return c;\n        }\n        if (c.dialCode.startsWith(this.countrySearchText)) {\n          return c;\n        }\n      } else {\n        // Or search by specific SearchCountryField(s)\n        if (this.searchCountryField.indexOf(SearchCountryField.Iso2) > -1) {\n          if (c.iso2.toLowerCase().startsWith(countrySearchTextLower)) {\n            return c;\n          }\n        }\n        if (this.searchCountryField.indexOf(SearchCountryField.Name) > -1) {\n          if (c.name.toLowerCase().startsWith(countrySearchTextLower)) {\n            return c;\n          }\n        }\n        if (this.searchCountryField.indexOf(SearchCountryField.DialCode) > -1) {\n          if (c.dialCode.startsWith(this.countrySearchText)) {\n            return c;\n          }\n        }\n      }\n    });\n    if (country.length > 0) {\n      const el = this.countryList.nativeElement.querySelector('#' + country[0].htmlId);\n      if (el) {\n        el.scrollIntoView({\n          behavior: 'smooth',\n          block: 'nearest',\n          inline: 'nearest'\n        });\n      }\n    }\n    this.checkSeparateDialCodeStyle();\n  }\n  onPhoneNumberChange() {\n    let countryCode;\n    // Handle the case where the user sets the value programatically based on a persisted ChangeData obj.\n    if (this.phoneNumber && typeof this.phoneNumber === 'object') {\n      const numberObj = this.phoneNumber;\n      this.phoneNumber = numberObj.number;\n      countryCode = numberObj.countryCode;\n    }\n    this.value = this.phoneNumber;\n    countryCode = countryCode || this.selectedCountry.iso2;\n    // @ts-ignore\n    const number = this.getParsedNumber(this.phoneNumber, countryCode);\n    // auto select country based on the extension (and areaCode if needed) (e.g select Canada if number starts with +1 416)\n    if (this.enableAutoCountrySelect) {\n      countryCode = number && number.getCountryCode() ?\n      // @ts-ignore\n      this.getCountryIsoCode(number.getCountryCode(), number) : this.selectedCountry.iso2;\n      if (countryCode && countryCode !== this.selectedCountry.iso2) {\n        const newCountry = this.allCountries.sort((a, b) => {\n          return a.priority - b.priority;\n        }).find(c => c.iso2 === countryCode);\n        if (newCountry) {\n          this.selectedCountry = newCountry;\n        }\n      }\n    }\n    countryCode = countryCode ? countryCode : this.selectedCountry.iso2;\n    this.checkSeparateDialCodeStyle();\n    if (!this.value) {\n      // Reason: avoid https://stackoverflow.com/a/54358133/1617590\n      // tslint:disable-next-line: no-null-keyword\n      // @ts-ignore\n      this.propagateChange(null);\n    } else {\n      const intlNo = number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL) : '';\n      // parse phoneNumber if separate dial code is needed\n      if (this.separateDialCode && intlNo) {\n        this.value = this.removeDialCode(intlNo);\n      }\n      this.propagateChange({\n        number: this.value,\n        internationalNumber: intlNo,\n        nationalNumber: number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL) : '',\n        e164Number: number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164) : '',\n        countryCode: countryCode.toUpperCase(),\n        dialCode: '+' + this.selectedCountry.dialCode\n      });\n    }\n  }\n  onCountrySelect(country, el) {\n    this.setSelectedCountry(country);\n    this.checkSeparateDialCodeStyle();\n    if (this.phoneNumber && this.phoneNumber.length > 0) {\n      this.value = this.phoneNumber;\n      const number = this.getParsedNumber(this.phoneNumber, this.selectedCountry.iso2);\n      const intlNo = number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.INTERNATIONAL) : '';\n      // parse phoneNumber if separate dial code is needed\n      if (this.separateDialCode && intlNo) {\n        this.value = this.removeDialCode(intlNo);\n      }\n      this.propagateChange({\n        number: this.value,\n        internationalNumber: intlNo,\n        nationalNumber: number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.NATIONAL) : '',\n        e164Number: number ? this.phoneUtil.format(number, lpn.PhoneNumberFormat.E164) : '',\n        countryCode: this.selectedCountry.iso2.toUpperCase(),\n        dialCode: '+' + this.selectedCountry.dialCode\n      });\n    } else {\n      // Reason: avoid https://stackoverflow.com/a/54358133/1617590\n      // tslint:disable-next-line: no-null-keyword\n      // @ts-ignore\n      this.propagateChange(null);\n    }\n    el.focus();\n  }\n  onInputKeyPress(event) {\n    const allowedChars = /[0-9\\+\\-\\(\\)\\ ]/;\n    const allowedCtrlChars = /[axcv]/; // Allows copy-pasting\n    const allowedOtherKeys = ['ArrowLeft', 'ArrowUp', 'ArrowRight', 'ArrowDown', 'Home', 'End', 'Insert', 'Delete', 'Backspace'];\n    if (!allowedChars.test(event.key) && !(event.ctrlKey && allowedCtrlChars.test(event.key)) && !allowedOtherKeys.includes(event.key)) {\n      event.preventDefault();\n    }\n  }\n  registerOnChange(fn) {\n    this.propagateChange = fn;\n  }\n  registerOnTouched(fn) {\n    this.onTouched = fn;\n  }\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  writeValue(obj) {\n    if (obj === undefined) {\n      this.init();\n    }\n    this.phoneNumber = obj;\n    setTimeout(() => {\n      this.onPhoneNumberChange();\n    }, 1);\n  }\n  resolvePlaceholder() {\n    let placeholder = '';\n    if (this.customPlaceholder) {\n      placeholder = this.customPlaceholder;\n    } else if (this.selectedCountry.placeHolder) {\n      placeholder = this.selectedCountry.placeHolder;\n      if (this.separateDialCode) {\n        placeholder = this.removeDialCode(placeholder);\n      }\n    }\n    return placeholder;\n  }\n  /* --------------------------------- Helpers -------------------------------- */\n  /**\r\n   * Returns parse PhoneNumber object.\r\n   * @param phoneNumber string\r\n   * @param countryCode string\r\n   */\n  getParsedNumber(phoneNumber, countryCode) {\n    let number;\n    try {\n      number = this.phoneUtil.parse(phoneNumber, countryCode.toUpperCase());\n    } catch (e) {}\n    // @ts-ignore\n    return number;\n  }\n  /**\r\n   * Adjusts input alignment based on the dial code presentation style.\r\n   */\n  checkSeparateDialCodeStyle() {\n    if (this.separateDialCode && this.selectedCountry) {\n      const cntryCd = this.selectedCountry.dialCode;\n      this.separateDialCodeClass = 'separate-dial-code iti-sdc-' + (cntryCd.length + 1);\n    } else {\n      this.separateDialCodeClass = '';\n    }\n  }\n  /**\r\n   * Cleans dialcode from phone number string.\r\n   * @param phoneNumber string\r\n   */\n  removeDialCode(phoneNumber) {\n    const number = this.getParsedNumber(phoneNumber, this.selectedCountry.iso2);\n    phoneNumber = this.phoneUtil.format(number, lpn.PhoneNumberFormat[this.numberFormat]);\n    if (phoneNumber.startsWith('+') && this.separateDialCode) {\n      phoneNumber = phoneNumber.substr(phoneNumber.indexOf(' ') + 1);\n    }\n    return phoneNumber;\n  }\n  /**\r\n   * Sifts through all countries and returns iso code of the primary country\r\n   * based on the number provided.\r\n   * @param countryCode country code in number format\r\n   * @param number PhoneNumber object\r\n   */\n  getCountryIsoCode(countryCode, number) {\n    // Will use this to match area code from the first numbers\n    // @ts-ignore\n    const rawNumber = number['values_']['2'].toString();\n    // List of all countries with countryCode (can be more than one. e.x. US, CA, DO, PR all have +1 countryCode)\n    const countries = this.allCountries.filter(c => c.dialCode === countryCode.toString());\n    // Main country is the country, which has no areaCodes specified in country-code.ts file.\n    const mainCountry = countries.find(c => c.areaCodes === undefined);\n    // Secondary countries are all countries, which have areaCodes specified in country-code.ts file.\n    const secondaryCountries = countries.filter(c => c.areaCodes !== undefined);\n    let matchedCountry = mainCountry ? mainCountry.iso2 : undefined;\n    /*\r\n            Iterate over each secondary country and check if nationalNumber starts with any of areaCodes available.\r\n            If no matches found, fallback to the main country.\r\n        */\n    secondaryCountries.forEach(country => {\n      // @ts-ignore\n      country.areaCodes.forEach(areaCode => {\n        if (rawNumber.startsWith(areaCode)) {\n          matchedCountry = country.iso2;\n        }\n      });\n    });\n    return matchedCountry;\n  }\n  /**\r\n   * Gets formatted example phone number from phoneUtil.\r\n   * @param countryCode string\r\n   */\n  getPhoneNumberPlaceHolder(countryCode) {\n    try {\n      return this.phoneUtil.format(this.phoneUtil.getExampleNumber(countryCode), lpn.PhoneNumberFormat[this.numberFormat]);\n    } catch (e) {\n      // @ts-ignore\n      return e;\n    }\n  }\n  /**\r\n   * Clearing the list to avoid duplicates (https://github.com/guillermodelagala/ngx-intl-tel-input/issues/248)\r\n   */\n  fetchCountryData() {\n    this.allCountries = [];\n    this.countryCodeData.allCountries.forEach(c => {\n      const country = {\n        name: c[0].toString(),\n        iso2: c[1].toString(),\n        dialCode: c[2].toString(),\n        priority: +c[3] || 0,\n        areaCodes: c[4] || undefined,\n        htmlId: `iti-0__item-${c[1].toString()}`,\n        flagClass: `iti__${c[1].toString().toLocaleLowerCase()}`,\n        placeHolder: ''\n      };\n      if (this.enablePlaceholder) {\n        country.placeHolder = this.getPhoneNumberPlaceHolder(country.iso2.toUpperCase());\n      }\n      this.allCountries.push(country);\n    });\n  }\n  /**\r\n   * Populates preferredCountriesInDropDown with prefferred countries.\r\n   */\n  updatePreferredCountries() {\n    if (this.preferredCountries.length) {\n      this.preferredCountriesInDropDown = [];\n      this.preferredCountries.forEach(iso2 => {\n        const preferredCountry = this.allCountries.filter(c => {\n          return c.iso2 === iso2;\n        });\n        this.preferredCountriesInDropDown.push(preferredCountry[0]);\n      });\n    }\n  }\n  /**\r\n   * Updates selectedCountry.\r\n   */\n  updateSelectedCountry() {\n    if (this.selectedCountryISO) {\n      // @ts-ignore\n      this.selectedCountry = this.allCountries.find(c => {\n        return c.iso2.toLowerCase() === this.selectedCountryISO.toLowerCase();\n      });\n      if (this.selectedCountry) {\n        if (this.phoneNumber) {\n          this.onPhoneNumberChange();\n        } else {\n          // Reason: avoid https://stackoverflow.com/a/54358133/1617590\n          // tslint:disable-next-line: no-null-keyword\n          // @ts-ignore\n          this.propagateChange(null);\n        }\n      }\n    }\n  }\n}\nNgxIntlTelInputComponent.ɵfac = function NgxIntlTelInputComponent_Factory(t) {\n  return new (t || NgxIntlTelInputComponent)(i0.ɵɵdirectiveInject(CountryCode));\n};\nNgxIntlTelInputComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: NgxIntlTelInputComponent,\n  selectors: [[\"ngx-intl-tel-input\"]],\n  viewQuery: function NgxIntlTelInputComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.countryList = _t.first);\n    }\n  },\n  inputs: {\n    value: \"value\",\n    preferredCountries: \"preferredCountries\",\n    enablePlaceholder: \"enablePlaceholder\",\n    customPlaceholder: \"customPlaceholder\",\n    numberFormat: \"numberFormat\",\n    cssClass: \"cssClass\",\n    onlyCountries: \"onlyCountries\",\n    enableAutoCountrySelect: \"enableAutoCountrySelect\",\n    searchCountryFlag: \"searchCountryFlag\",\n    searchCountryField: \"searchCountryField\",\n    searchCountryPlaceholder: \"searchCountryPlaceholder\",\n    maxLength: \"maxLength\",\n    selectFirstCountry: \"selectFirstCountry\",\n    selectedCountryISO: \"selectedCountryISO\",\n    phoneValidation: \"phoneValidation\",\n    inputId: \"inputId\",\n    separateDialCode: \"separateDialCode\"\n  },\n  outputs: {\n    countryChange: \"countryChange\"\n  },\n  features: [i0.ɵɵProvidersFeature([CountryCode, {\n    provide: NG_VALUE_ACCESSOR,\n    // tslint:disable-next-line:no-forward-ref\n    useExisting: forwardRef(() => NgxIntlTelInputComponent),\n    multi: true\n  }, {\n    provide: NG_VALIDATORS,\n    useValue: phoneNumberValidator,\n    multi: true\n  }]), i0.ɵɵNgOnChangesFeature],\n  decls: 9,\n  vars: 14,\n  consts: [[1, \"iti\", \"iti--allow-dropdown\", 3, \"ngClass\"], [\"dropdown\", \"\", 1, \"iti__flag-container\", 3, \"ngClass\", \"isDisabled\"], [\"dropdownToggle\", \"\", 1, \"iti__selected-flag\", \"dropdown-toggle\"], [1, \"iti__flag\", 3, \"ngClass\"], [\"class\", \"selected-dial-code\", 4, \"ngIf\"], [1, \"iti__arrow\"], [\"class\", \"dropdown-menu country-dropdown\", 4, \"dropdownMenu\"], [\"type\", \"tel\", \"autocomplete\", \"off\", 3, \"id\", \"ngClass\", \"ngModel\", \"disabled\", \"placeholder\", \"blur\", \"keypress\", \"ngModelChange\"], [\"focusable\", \"\"], [1, \"selected-dial-code\"], [1, \"dropdown-menu\", \"country-dropdown\"], [\"class\", \"search-container\", 4, \"ngIf\"], [1, \"iti__country-list\"], [\"countryList\", \"\"], [\"class\", \"iti__country iti__preferred\", 3, \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"iti__divider\", 4, \"ngIf\"], [\"class\", \"iti__country iti__standard\", 3, \"id\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"search-container\"], [\"id\", \"country-search-box\", \"autofocus\", \"\", 3, \"ngModel\", \"placeholder\", \"ngModelChange\", \"keyup\", \"click\"], [1, \"iti__country\", \"iti__preferred\", 3, \"id\", \"click\"], [1, \"iti__flag-box\"], [1, \"iti__country-name\"], [1, \"iti__dial-code\"], [1, \"iti__divider\"], [1, \"iti__country\", \"iti__standard\", 3, \"id\", \"click\"]],\n  template: function NgxIntlTelInputComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n      i0.ɵɵelement(3, \"div\", 3);\n      i0.ɵɵtemplate(4, NgxIntlTelInputComponent_div_4_Template, 2, 1, \"div\", 4);\n      i0.ɵɵelement(5, \"div\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(6, NgxIntlTelInputComponent_div_6_Template, 7, 4, \"div\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 7, 8);\n      i0.ɵɵlistener(\"blur\", function NgxIntlTelInputComponent_Template_input_blur_7_listener() {\n        return ctx.onTouched();\n      })(\"keypress\", function NgxIntlTelInputComponent_Template_input_keypress_7_listener($event) {\n        return ctx.onInputKeyPress($event);\n      })(\"ngModelChange\", function NgxIntlTelInputComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.phoneNumber = $event;\n      })(\"ngModelChange\", function NgxIntlTelInputComponent_Template_input_ngModelChange_7_listener() {\n        return ctx.onPhoneNumberChange();\n      });\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", ctx.separateDialCodeClass);\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(12, _c1, ctx.disabled))(\"isDisabled\", ctx.disabled);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", (ctx.selectedCountry == null ? null : ctx.selectedCountry.flagClass) || \"\");\n      i0.ɵɵadvance();\n      i0.ɵɵproperty(\"ngIf\", ctx.separateDialCode);\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"id\", ctx.inputId)(\"ngClass\", ctx.cssClass)(\"ngModel\", ctx.phoneNumber)(\"disabled\", ctx.disabled)(\"placeholder\", ctx.resolvePlaceholder());\n      i0.ɵɵattribute(\"maxLength\", ctx.maxLength)(\"validation\", ctx.phoneValidation);\n    }\n  },\n  dependencies: [i2.NgClass, i3.BsDropdownDirective, i3.BsDropdownToggleDirective, i2.NgIf, i3.BsDropdownMenuDirective, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgModel, NativeElementInjectorDirective, i2.NgForOf],\n  styles: [\".dropup[_ngcontent-%COMP%], .dropright[_ngcontent-%COMP%], .dropdown[_ngcontent-%COMP%], .dropleft[_ngcontent-%COMP%]{position:relative}.dropdown-toggle[_ngcontent-%COMP%]{white-space:nowrap}.dropdown-toggle[_ngcontent-%COMP%]:after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.dropdown-toggle[_ngcontent-%COMP%]:empty:after{margin-left:0}.dropdown-menu[_ngcontent-%COMP%]{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:.5rem 0;margin:.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.dropdown-menu-left[_ngcontent-%COMP%]{right:auto;left:0}.dropdown-menu-right[_ngcontent-%COMP%]{right:0;left:auto}@media (min-width: 576px){.dropdown-menu-sm-left[_ngcontent-%COMP%]{right:auto;left:0}.dropdown-menu-sm-right[_ngcontent-%COMP%]{right:0;left:auto}}@media (min-width: 768px){.dropdown-menu-md-left[_ngcontent-%COMP%]{right:auto;left:0}.dropdown-menu-md-right[_ngcontent-%COMP%]{right:0;left:auto}}@media (min-width: 992px){.dropdown-menu-lg-left[_ngcontent-%COMP%]{right:auto;left:0}.dropdown-menu-lg-right[_ngcontent-%COMP%]{right:0;left:auto}}@media (min-width: 1200px){.dropdown-menu-xl-left[_ngcontent-%COMP%]{right:auto;left:0}.dropdown-menu-xl-right[_ngcontent-%COMP%]{right:0;left:auto}}.dropup[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{top:auto;bottom:100%;margin-top:0;margin-bottom:.125rem}.dropup[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\";border-top:0;border-right:.3em solid transparent;border-bottom:.3em solid;border-left:.3em solid transparent}.dropup[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:empty:after{margin-left:0}.dropright[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{top:0;right:auto;left:100%;margin-top:0;margin-left:.125rem}.dropright[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\";border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid}.dropright[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:empty:after{margin-left:0}.dropright[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:after{vertical-align:0}.dropleft[_ngcontent-%COMP%]   .dropdown-menu[_ngcontent-%COMP%]{top:0;right:100%;left:auto;margin-top:0;margin-right:.125rem}.dropleft[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\"}.dropleft[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:after{display:none}.dropleft[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:before{display:inline-block;margin-right:.255em;vertical-align:.255em;content:\\\"\\\";border-top:.3em solid transparent;border-right:.3em solid;border-bottom:.3em solid transparent}.dropleft[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:empty:after{margin-left:0}.dropleft[_ngcontent-%COMP%]   .dropdown-toggle[_ngcontent-%COMP%]:before{vertical-align:0}.dropdown-menu[x-placement^=top][_ngcontent-%COMP%], .dropdown-menu[x-placement^=right][_ngcontent-%COMP%], .dropdown-menu[x-placement^=bottom][_ngcontent-%COMP%], .dropdown-menu[x-placement^=left][_ngcontent-%COMP%]{right:auto;bottom:auto}.dropdown-divider[_ngcontent-%COMP%]{height:0;margin:.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item[_ngcontent-%COMP%]{display:block;width:100%;padding:.25rem 1.5rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item[_ngcontent-%COMP%]:hover, .dropdown-item[_ngcontent-%COMP%]:focus{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active[_ngcontent-%COMP%], .dropdown-item[_ngcontent-%COMP%]:active{color:#fff;text-decoration:none;background-color:#007bff}.dropdown-item.disabled[_ngcontent-%COMP%], .dropdown-item[_ngcontent-%COMP%]:disabled{color:#6c757d;pointer-events:none;background-color:transparent}.dropdown-menu.show[_ngcontent-%COMP%]{display:block}.dropdown-header[_ngcontent-%COMP%]{display:block;padding:.5rem 1.5rem;margin-bottom:0;font-size:.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text[_ngcontent-%COMP%]{display:block;padding:.25rem 1.5rem;color:#212529}\", \"li.iti__country[_ngcontent-%COMP%]:hover{background-color:#0000000d}.iti__selected-flag.dropdown-toggle[_ngcontent-%COMP%]:after{content:none}.iti__flag-container.disabled[_ngcontent-%COMP%]{cursor:default!important}.iti.iti--allow-dropdown[_ngcontent-%COMP%]   .flag-container.disabled[_ngcontent-%COMP%]:hover   .iti__selected-flag[_ngcontent-%COMP%]{background:none}.country-dropdown[_ngcontent-%COMP%]{border:1px solid #ccc;width:-moz-fit-content;width:fit-content;padding:1px;border-collapse:collapse}.search-container[_ngcontent-%COMP%]{position:relative}.search-container[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{width:100%;border:none;border-bottom:1px solid #ccc;padding-left:10px}.search-icon[_ngcontent-%COMP%]{position:absolute;z-index:2;width:25px;margin:1px 10px}.iti__country-list[_ngcontent-%COMP%]{position:relative;border:none}.iti[_ngcontent-%COMP%]   input#country-search-box[_ngcontent-%COMP%]{padding-left:6px}.iti[_ngcontent-%COMP%]   .selected-dial-code[_ngcontent-%COMP%]{margin-left:6px}.iti.separate-dial-code[_ngcontent-%COMP%]   .iti__selected-flag[_ngcontent-%COMP%], .iti.separate-dial-code.iti--allow-dropdown.iti-sdc-2[_ngcontent-%COMP%]   .iti__selected-flag[_ngcontent-%COMP%], .iti.separate-dial-code.iti--allow-dropdown.iti-sdc-3[_ngcontent-%COMP%]   .iti__selected-flag[_ngcontent-%COMP%], .iti.separate-dial-code.iti--allow-dropdown.iti-sdc-4[_ngcontent-%COMP%]   .iti__selected-flag[_ngcontent-%COMP%]{width:93px}.iti.separate-dial-code[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .iti.separate-dial-code.iti--allow-dropdown.iti-sdc-2[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .iti.separate-dial-code.iti--allow-dropdown.iti-sdc-3[_ngcontent-%COMP%]   input[_ngcontent-%COMP%], .iti.separate-dial-code.iti--allow-dropdown.iti-sdc-4[_ngcontent-%COMP%]   input[_ngcontent-%COMP%]{padding-left:98px}\"]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxIntlTelInputComponent, [{\n    type: Component,\n    args: [{\n      selector: 'ngx-intl-tel-input',\n      providers: [CountryCode, {\n        provide: NG_VALUE_ACCESSOR,\n        // tslint:disable-next-line:no-forward-ref\n        useExisting: forwardRef(() => NgxIntlTelInputComponent),\n        multi: true\n      }, {\n        provide: NG_VALIDATORS,\n        useValue: phoneNumberValidator,\n        multi: true\n      }],\n      template: \"<div class=\\\"iti iti--allow-dropdown\\\"\\n\\t[ngClass]=\\\"separateDialCodeClass\\\">\\n\\t<div class=\\\"iti__flag-container\\\"\\n\\t\\tdropdown\\n\\t\\t[ngClass]=\\\"{'disabled': disabled}\\\"\\n\\t\\t[isDisabled]=\\\"disabled\\\">\\n\\t\\t<div class=\\\"iti__selected-flag dropdown-toggle\\\"\\n\\t\\t\\tdropdownToggle>\\n\\t\\t\\t<div class=\\\"iti__flag\\\"\\n\\t\\t\\t\\t[ngClass]=\\\"selectedCountry?.flagClass || ''\\\"></div>\\n\\t\\t\\t<div *ngIf=\\\"separateDialCode\\\"\\n\\t\\t\\t\\tclass=\\\"selected-dial-code\\\">+{{selectedCountry.dialCode}}</div>\\n\\t\\t\\t<div class=\\\"iti__arrow\\\"></div>\\n\\t\\t</div>\\n\\t\\t<div *dropdownMenu\\n\\t\\t\\tclass=\\\"dropdown-menu country-dropdown\\\">\\n\\t\\t\\t<div class=\\\"search-container\\\"\\n\\t\\t\\t\\t*ngIf=\\\"searchCountryFlag && searchCountryField\\\">\\n\\t\\t\\t\\t<input id=\\\"country-search-box\\\"\\n\\t\\t\\t\\t\\t[(ngModel)]=\\\"countrySearchText\\\"\\n\\t\\t\\t\\t\\t(keyup)=\\\"searchCountry()\\\"\\n\\t\\t\\t\\t\\t(click)=\\\"$event.stopPropagation()\\\"\\n\\t\\t\\t\\t\\t[placeholder]=\\\"searchCountryPlaceholder\\\"\\n\\t\\t\\t\\t\\tautofocus>\\n\\t\\t\\t</div>\\n\\t\\t\\t<ul class=\\\"iti__country-list\\\"\\n\\t\\t\\t\\t#countryList>\\n\\t\\t\\t\\t<li class=\\\"iti__country iti__preferred\\\"\\n\\t\\t\\t\\t\\t*ngFor=\\\"let country of preferredCountriesInDropDown\\\"\\n\\t\\t\\t\\t\\t(click)=\\\"onCountrySelect(country, focusable)\\\"\\n\\t\\t\\t\\t\\t[id]=\\\"country.htmlId+'-preferred'\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"iti__flag-box\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"iti__flag\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"country.flagClass\\\"></div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<span class=\\\"iti__country-name\\\">{{country.name}}</span>\\n\\t\\t\\t\\t\\t<span class=\\\"iti__dial-code\\\">+{{country.dialCode}}</span>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t\\t<li class=\\\"iti__divider\\\"\\n\\t\\t\\t\\t\\t*ngIf=\\\"preferredCountriesInDropDown?.length\\\"></li>\\n\\t\\t\\t\\t<li class=\\\"iti__country iti__standard\\\"\\n\\t\\t\\t\\t\\t*ngFor=\\\"let country of allCountries\\\"\\n\\t\\t\\t\\t\\t(click)=\\\"onCountrySelect(country, focusable)\\\"\\n\\t\\t\\t\\t\\t[id]=\\\"country.htmlId\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"iti__flag-box\\\">\\n\\t\\t\\t\\t\\t\\t<div class=\\\"iti__flag\\\"\\n\\t\\t\\t\\t\\t\\t\\t[ngClass]=\\\"country.flagClass\\\"></div>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t<span class=\\\"iti__country-name\\\">{{country.name}}</span>\\n\\t\\t\\t\\t\\t<span class=\\\"iti__dial-code\\\">+{{country.dialCode}}</span>\\n\\t\\t\\t\\t</li>\\n\\t\\t\\t</ul>\\n\\t\\t</div>\\n\\t</div>\\n\\t<input type=\\\"tel\\\"\\n\\t\\t[id]=\\\"inputId\\\"\\n\\t\\tautocomplete=\\\"off\\\"\\n\\t\\t[ngClass]=\\\"cssClass\\\"\\n\\t\\t(blur)=\\\"onTouched()\\\"\\n\\t\\t(keypress)=\\\"onInputKeyPress($event)\\\"\\n\\t\\t[(ngModel)]=\\\"phoneNumber\\\"\\n\\t\\t(ngModelChange)=\\\"onPhoneNumberChange()\\\"\\n\\t\\t[disabled]=\\\"disabled\\\"\\n\\t\\t[placeholder]=\\\"resolvePlaceholder()\\\"\\n\\t\\t[attr.maxLength]=\\\"maxLength\\\"\\n\\t\\t[attr.validation]=\\\"phoneValidation\\\"\\n\\t\\t#focusable>\\n</div>\\n\",\n      styles: [\".dropup,.dropright,.dropdown,.dropleft{position:relative}.dropdown-toggle{white-space:nowrap}.dropdown-toggle:after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\";border-top:.3em solid;border-right:.3em solid transparent;border-bottom:0;border-left:.3em solid transparent}.dropdown-toggle:empty:after{margin-left:0}.dropdown-menu{position:absolute;top:100%;left:0;z-index:1000;display:none;float:left;min-width:10rem;padding:.5rem 0;margin:.125rem 0 0;font-size:1rem;color:#212529;text-align:left;list-style:none;background-color:#fff;background-clip:padding-box;border:1px solid rgba(0,0,0,.15);border-radius:.25rem}.dropdown-menu-left{right:auto;left:0}.dropdown-menu-right{right:0;left:auto}@media (min-width: 576px){.dropdown-menu-sm-left{right:auto;left:0}.dropdown-menu-sm-right{right:0;left:auto}}@media (min-width: 768px){.dropdown-menu-md-left{right:auto;left:0}.dropdown-menu-md-right{right:0;left:auto}}@media (min-width: 992px){.dropdown-menu-lg-left{right:auto;left:0}.dropdown-menu-lg-right{right:0;left:auto}}@media (min-width: 1200px){.dropdown-menu-xl-left{right:auto;left:0}.dropdown-menu-xl-right{right:0;left:auto}}.dropup .dropdown-menu{top:auto;bottom:100%;margin-top:0;margin-bottom:.125rem}.dropup .dropdown-toggle:after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\";border-top:0;border-right:.3em solid transparent;border-bottom:.3em solid;border-left:.3em solid transparent}.dropup .dropdown-toggle:empty:after{margin-left:0}.dropright .dropdown-menu{top:0;right:auto;left:100%;margin-top:0;margin-left:.125rem}.dropright .dropdown-toggle:after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\";border-top:.3em solid transparent;border-right:0;border-bottom:.3em solid transparent;border-left:.3em solid}.dropright .dropdown-toggle:empty:after{margin-left:0}.dropright .dropdown-toggle:after{vertical-align:0}.dropleft .dropdown-menu{top:0;right:100%;left:auto;margin-top:0;margin-right:.125rem}.dropleft .dropdown-toggle:after{display:inline-block;margin-left:.255em;vertical-align:.255em;content:\\\"\\\"}.dropleft .dropdown-toggle:after{display:none}.dropleft .dropdown-toggle:before{display:inline-block;margin-right:.255em;vertical-align:.255em;content:\\\"\\\";border-top:.3em solid transparent;border-right:.3em solid;border-bottom:.3em solid transparent}.dropleft .dropdown-toggle:empty:after{margin-left:0}.dropleft .dropdown-toggle:before{vertical-align:0}.dropdown-menu[x-placement^=top],.dropdown-menu[x-placement^=right],.dropdown-menu[x-placement^=bottom],.dropdown-menu[x-placement^=left]{right:auto;bottom:auto}.dropdown-divider{height:0;margin:.5rem 0;overflow:hidden;border-top:1px solid #e9ecef}.dropdown-item{display:block;width:100%;padding:.25rem 1.5rem;clear:both;font-weight:400;color:#212529;text-align:inherit;white-space:nowrap;background-color:transparent;border:0}.dropdown-item:hover,.dropdown-item:focus{color:#16181b;text-decoration:none;background-color:#f8f9fa}.dropdown-item.active,.dropdown-item:active{color:#fff;text-decoration:none;background-color:#007bff}.dropdown-item.disabled,.dropdown-item:disabled{color:#6c757d;pointer-events:none;background-color:transparent}.dropdown-menu.show{display:block}.dropdown-header{display:block;padding:.5rem 1.5rem;margin-bottom:0;font-size:.875rem;color:#6c757d;white-space:nowrap}.dropdown-item-text{display:block;padding:.25rem 1.5rem;color:#212529}\\n\", \"li.iti__country:hover{background-color:#0000000d}.iti__selected-flag.dropdown-toggle:after{content:none}.iti__flag-container.disabled{cursor:default!important}.iti.iti--allow-dropdown .flag-container.disabled:hover .iti__selected-flag{background:none}.country-dropdown{border:1px solid #ccc;width:-moz-fit-content;width:fit-content;padding:1px;border-collapse:collapse}.search-container{position:relative}.search-container input{width:100%;border:none;border-bottom:1px solid #ccc;padding-left:10px}.search-icon{position:absolute;z-index:2;width:25px;margin:1px 10px}.iti__country-list{position:relative;border:none}.iti input#country-search-box{padding-left:6px}.iti .selected-dial-code{margin-left:6px}.iti.separate-dial-code .iti__selected-flag,.iti.separate-dial-code.iti--allow-dropdown.iti-sdc-2 .iti__selected-flag,.iti.separate-dial-code.iti--allow-dropdown.iti-sdc-3 .iti__selected-flag,.iti.separate-dial-code.iti--allow-dropdown.iti-sdc-4 .iti__selected-flag{width:93px}.iti.separate-dial-code input,.iti.separate-dial-code.iti--allow-dropdown.iti-sdc-2 input,.iti.separate-dial-code.iti--allow-dropdown.iti-sdc-3 input,.iti.separate-dial-code.iti--allow-dropdown.iti-sdc-4 input{padding-left:98px}\\n\"]\n    }]\n  }], function () {\n    return [{\n      type: CountryCode\n    }];\n  }, {\n    value: [{\n      type: Input\n    }],\n    preferredCountries: [{\n      type: Input\n    }],\n    enablePlaceholder: [{\n      type: Input\n    }],\n    customPlaceholder: [{\n      type: Input\n    }],\n    numberFormat: [{\n      type: Input\n    }],\n    cssClass: [{\n      type: Input\n    }],\n    onlyCountries: [{\n      type: Input\n    }],\n    enableAutoCountrySelect: [{\n      type: Input\n    }],\n    searchCountryFlag: [{\n      type: Input\n    }],\n    searchCountryField: [{\n      type: Input\n    }],\n    searchCountryPlaceholder: [{\n      type: Input\n    }],\n    maxLength: [{\n      type: Input\n    }],\n    selectFirstCountry: [{\n      type: Input\n    }],\n    selectedCountryISO: [{\n      type: Input\n    }],\n    phoneValidation: [{\n      type: Input\n    }],\n    inputId: [{\n      type: Input\n    }],\n    separateDialCode: [{\n      type: Input\n    }],\n    countryChange: [{\n      type: Output\n    }],\n    countryList: [{\n      type: ViewChild,\n      args: ['countryList']\n    }]\n  });\n})();\nconst dropdownModuleForRoot = BsDropdownModule.forRoot();\nclass NgxIntlTelInputModule {}\nNgxIntlTelInputModule.ɵfac = function NgxIntlTelInputModule_Factory(t) {\n  return new (t || NgxIntlTelInputModule)();\n};\nNgxIntlTelInputModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: NgxIntlTelInputModule,\n  declarations: [NgxIntlTelInputComponent, NativeElementInjectorDirective],\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, i3.BsDropdownModule],\n  exports: [NgxIntlTelInputComponent, NativeElementInjectorDirective]\n});\nNgxIntlTelInputModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, FormsModule, ReactiveFormsModule, dropdownModuleForRoot]]\n});\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxIntlTelInputModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [NgxIntlTelInputComponent, NativeElementInjectorDirective],\n      imports: [CommonModule, FormsModule, ReactiveFormsModule, dropdownModuleForRoot],\n      exports: [NgxIntlTelInputComponent, NativeElementInjectorDirective]\n    }]\n  }], null, null);\n})();\n\n/*\r\n * Public API Surface of ngx-intl-tel-input\r\n */\n\n/**\r\n * Generated bundle index. Do not edit.\r\n */\n\nexport { CountryISO, NativeElementInjectorDirective, NgxIntlTelInputComponent, NgxIntlTelInputModule, PhoneNumberFormat, SearchCountryField, dropdownModuleForRoot };\n"],
  "mappings": "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",
  "names": ["CountryISO", "SearchCountryField", "PhoneNumberFormat"]
}
